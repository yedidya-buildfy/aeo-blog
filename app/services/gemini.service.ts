export class GeminiService {
  private apiKey: string;
  private baseUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent';

  constructor() {
    this.apiKey = process.env.GEMINI_API_KEY || '';
    if (!this.apiKey) {
      throw new Error('GEMINI_API_KEY environment variable is required');
    }
  }

  async generateLlmsContent(storeUrl: string): Promise<string> {
    const prompt = this.buildPrompt(storeUrl);

    const requestBody = {
      contents: [
        {
          parts: [
            {
              text: prompt
            }
          ]
        }
      ]
    };

    try {
      const response = await fetch(this.baseUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-goog-api-key': this.apiKey
        },
        body: JSON.stringify(requestBody)
      });

      if (!response.ok) {
        throw new Error(`Gemini API error: ${response.status} ${response.statusText}`);
      }

      const data = await response.json();
      
      if (!data.candidates || data.candidates.length === 0) {
        throw new Error('No content generated by Gemini API');
      }

      const generatedText = data.candidates[0].content.parts[0].text;
      return generatedText.trim();

    } catch (error) {
      console.error('Error calling Gemini API:', error);
      throw error;
    }
  }

  buildPrompt(storeUrl: string): string {
    return `You are an AI Engine Optimization (AEO) expert.
Crawl the given Shopify store URL and generate a production-ready llms.txt file.

Rules:
- Plain text only (no markdown, no HTML).
- Structure:
  Brand summary (1–3 lines)
  Core pages (Homepage, FAQ, Contact)
  Top products (5–10) with names + URLs
  Collections (up to 5) with URLs
  Policies (shipping, refund, privacy, terms)
  Short Q&A (2–4 common questions with answers)
  Keywords (5–15 terms)

URL: ${storeUrl}
Return only the llms body.`;
  }
}