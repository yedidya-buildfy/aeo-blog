generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Backup {
  id         String   @id @default(cuid())
  shopDomain String
  fileName   String
  content    String?
  createdAt  DateTime @default(now())

  @@index([shopDomain, fileName])
}

model KeywordAnalysis {
  id               String   @id @default(cuid())
  shopDomain       String
  storeUrl         String
  keywords         String[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  customerSearches String[] @default([])
  mainProducts     String[] @default([])
  problemsSolved   String[] @default([])

  @@index([shopDomain])
  @@index([storeUrl])
}

model BlogPost {
  id               String    @id @default(cuid())
  shopDomain       String
  shopifyBlogId    String
  shopifyArticleId String
  keyword          String
  title            String
  status           String
  createdAt        DateTime  @default(now())
  publishedAt      DateTime?
  contentAngle     String
  contentHash      String
  handle           String
  keywordsFocused  String[]  @default([])
  primaryTopic     String

  @@unique([shopDomain, contentHash])
  @@index([shopDomain])
  @@index([keyword])
  @@index([primaryTopic])
  @@index([contentHash])
}

model AEOContent {
  id            String   @id @default(cuid())
  shopDomain    String
  sourceUrl     String
  llmsContent   String
  robotsContent String   @default("")
  version       Int      @default(1)
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([shopDomain])
  @@index([sourceUrl])
}

model TopicBatch {
  id         String   @id @default(cuid())
  shopDomain String
  batchNumber Int
  topics     String   // JSON string containing GeneratedTopic[]
  usedTopics String   // JSON string containing used topic titles
  createdAt  DateTime @default(now())

  @@unique([shopDomain, batchNumber])
  @@index([shopDomain])
}

model AutomationSchedule {
  id               String    @id @default(cuid())
  shopDomain       String    @unique
  enabled          Boolean   @default(false)
  frequency        String    @default("weekly") // 'weekly' for now
  targetDayOfWeek  Int       @default(0) // 0 = Sunday, 1 = Monday, etc.
  targetHourIST    Int       @default(10) // 10 AM Israel time
  lastGeneratedAt  DateTime?
  nextTargetDate   DateTime?
  status           String    @default("idle") // 'idle', 'generating', 'completed', 'error'
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@index([shopDomain])
  @@index([enabled])
  @@index([nextTargetDate])
}

model Subscription {
  id              String    @id @default(cuid())
  shopDomain      String    @unique
  plan            String    @default("free") // "free", "starter", "pro"
  shopifyChargeId String?   // Shopify subscription ID
  status          String    @default("active") // "active", "cancelled", "declined"
  billingOn       DateTime? // Next billing date
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([shopDomain])
  @@index([plan])
  @@index([status])
}

model UsageTracking {
  id            String   @id @default(cuid())
  shopDomain    String
  weekStart     DateTime // Start of the week (Monday)
  blogsGenerated Int     @default(0)
  llmsGenerated Int      @default(0) // Track LLMs.txt generations
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([shopDomain, weekStart])
  @@index([shopDomain])
  @@index([weekStart])
}
